package rpsg;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

import com.framework.TcpApplication;

public class GameAppClient extends TcpApplication {
	
	public static PrintWriter pw = null;
	public static BufferedReader keyboard = null;
	public static BufferedReader br = null;
	public static Socket sSock = null;
	static Scanner sc = new Scanner(System.in);
	
	//기본 코인 할당		   
	static int coin = 100;
	
	// 서버 IP 주소
	private static String sAddr = null;
	
	// 클라이언트 ID
	static String id = null;	
	
	// 어플리케이션 초기화
	@Override
	public void init() {		
		super.init();
	}
	
	//어플리케이션 실행
	@Override
	public void start() {		
		
		try {
			// 1. 서버연결			
			sSock = new Socket(TcpApplication.IP, TcpApplication.PORT);
			sAddr = sSock.getInetAddress().getHostAddress();
			
		   // 2.1 송신 스트림 얻기			
		   pw = new PrintWriter(new OutputStreamWriter(sSock.getOutputStream()));

		   // 2.2 수신 스트림 얻기
		   br = new BufferedReader(new InputStreamReader(sSock.getInputStream()));
		   
		   // 2.3 키보드 스트림 얻기
		   keyboard = new BufferedReader(new InputStreamReader(System.in));
		   			
		   // 3. 클라이언트의 id를 전송한다.
		   System.out.println("서버에 접속하셨습니다.");
		   System.out.println("ID를 생성하세요");
		   System.out.print("ID: ");

		   // id 변수에 버퍼에 저장된 입력 값 저장
		   id = keyboard.readLine();
		   // 서버에 id 전송
		   pw.println(id);	 
		   pw.flush();
		   
		   
		  //두번째 메뉴 출력
				showMenu2();
//				while(true) {
					
				int select2 = sc.nextInt();
				switch (select2) {	
				
				case 1:			           
					Game.play();
					break;
					
				case 2:		
					Shop.shopIn();
					break;				
					
				case 0:
					System.out.println("프로그램을 종료합니다.");
					String line = null;
					System.out.println(line);
					while((line = br.readLine()) != null) {
						// 퇴장하는 경우
						if(line.equalsIgnoreCase("/quit")) {
							// 퇴장정보 브로드캐스팅
							GameTcpServerHandler.broadCast("[" + id + "] 님이 나가셨습니다..");
							break;
						}
						
					}	
					
					
					
				default:
					System.out.println("다시 입력하세요");
				    break;		
				    
			}
//		} // while문 스코프
				// 4. 접속한 서버의 데이터 수신을 담당할 스레드를 생성하여 실행
				Thread thread = new Thread(new GameTcpClientHandler());
				thread.start();		
		   
			
		}catch (IOException ex) {
			ex.printStackTrace();
		}		
		   
	}
	public static void showMenu2() {
		  System.out.printf("					          		 \n");
		   System.out.printf("접속할 장소를 선택하세요 .          		 \n");
		   System.out.printf("                   			     \n");
		   System.out.printf("          [1] → Game Play            ");
	       System.out.printf("[2] → Market Entrance                 ");
	       System.out.printf("[0] → Exit                    \n");
	       System.out.printf("                   			     \n");		
	       
	       
	         int select2 = sc.nextInt();

	  		switch (select2) {	
	  		
	  		case 1:			           
	  			TcpApplication app = new GameAppClient();	
	  			Game.play();
	  			break;            	
	  			
	  		case 2:
	  			Shop.shopIn();
	 				break;		
	  			
	  		case 0:
	  			System.out.println("프로그램을 종료합니다.");
	  			//System.exit(0);
	  			pw.println("0");
			    pw.flush();
	  			break;
	  		}   
	          
	          
		}
	}

